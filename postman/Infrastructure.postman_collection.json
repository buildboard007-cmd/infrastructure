{
  "info": {
    "_postman_id": "infrastructure-api-collection-001",
    "name": "Infrastructure",
    "description": "Complete API collection for Infrastructure application including SuperAdmin signup, organization management, location management, roles & permissions management, user management, and project management.\n\n🔧 WORKFLOW FIXES APPLIED:\n- Fixed database permissions for app_user to access iam/project schemas\n- Fixed project_phase constraint violation (changed 'planning' to 'pre_construction')\n- Updated all date examples to use future dates\n- Added JWT token validation in Sign In tests\n- Verified complete signup workflow: SignUp → Confirm → SignIn → API Access\n\n✅ ENHANCED JWT TOKEN SYSTEM:\n1. SuperAdmin Signup: Creates Cognito user with custom:isSuperAdmin=true\n2. Normal User Creation: Super admins create users via POST /users with Cognito integration\n3. Email Confirmation: Triggers PostConfirmation Lambda → Creates user in IAM database\n4. Sign In: PreTokenGeneration Lambda → Adds enriched JWT with:\n   - User profile (user_id, org_id, email, names)\n   - Location access (last_selected_location_id)\n   - All locations & roles (base64 encoded for offline access)\n   - Organization details and admin flags\n5. Offline Authorization: Frontend can check permissions without API calls\n6. UI Integration: Location dropdown populated from JWT, no additional API needed\n\n🚀 CONSTRUCTION MANAGEMENT OPTIMIZED:\n- Mobile-first design for field workers\n- Offline-capable role-based authorization\n- Hierarchical access control (org → location → project)\n- Password reset workflow for normal users\n\n📧 USER MANAGEMENT ENHANCEMENTS:\n- Flexible user updates: PUT /users/{id} supports partial updates including email changes\n- Email synchronization: Email updates automatically sync with AWS Cognito\n- Automatic user activation: Users with 'pending' status are automatically activated on first successful login\n- Single update endpoint: All user field updates (profile, email, status) use one unified API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "SuperAdmin Signup (Fixed Workflow)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has UserSub', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('UserSub');",
                  "    console.log('UserSub:', jsonData.UserSub);",
                  "    // Store UserSub for confirmation step",
                  "    pm.globals.set('cognito_user_sub', jsonData.UserSub);",
                  "});",
                  "",
                  "console.log('SuperAdmin signup completed. Check email for confirmation code.');",
                  "console.log('WORKFLOW: 1. SignUp -> 2. Confirm -> 3. SignIn -> 4. Use APIs');",
                  "console.log('NOTE: PostConfirmation trigger creates user in IAM database');",
                  "console.log('NOTE: PreTokenGeneration adds user_id, org_id to JWT tokens');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-amz-json-1.1"
              },
              {
                "key": "X-Amz-Target",
                "value": "AWSCognitoIdentityProviderService.SignUp"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ClientId\": \"3f0fb5mpivctnvj85tucusf88e\",\n  \"Username\": \"buildboard007+test2@gmail.com\",\n  \"Password\": \"TempPass123!\",\n  \"UserAttributes\": [\n    {\n      \"Name\": \"email\",\n      \"Value\": \"buildboard007+test2@gmail.com\"\n    },\n    {\n      \"Name\": \"custom:isSuperAdmin\",\n      \"Value\": \"true\"\n    }\n  ],\n  \"ClientMetadata\": {\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"phone\": \"+1234567890\"\n  }\n}"
            },
            "url": {
              "raw": "https://cognito-idp.us-east-2.amazonaws.com/",
              "protocol": "https",
              "host": [
                "cognito-idp",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                ""
              ]
            }
          }
        },
        {
          "name": "Confirm Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('Email confirmation completed. User can now sign in.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-amz-json-1.1"
              },
              {
                "key": "X-Amz-Target",
                "value": "AWSCognitoIdentityProviderService.ConfirmSignUp"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ClientId\": \"3f0fb5mpivctnvj85tucusf88e\",\n  \"Username\": \"buildboard007+test2@gmail.com\",\n  \"ConfirmationCode\": \"REPLACE_WITH_CODE_FROM_EMAIL\"\n}"
            },
            "url": {
              "raw": "https://cognito-idp.us-east-2.amazonaws.com/",
              "protocol": "https",
              "host": [
                "cognito-idp",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                ""
              ]
            }
          }
        },
        {
          "name": "SuperAdmin Sign In",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Authentication result exists', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('AuthenticationResult');",
                  "    ",
                  "    // Store tokens for API calls",
                  "    const authResult = jsonData.AuthenticationResult;",
                  "    pm.globals.set('access_token', authResult.AccessToken);",
                  "    pm.globals.set('id_token', authResult.IdToken);",
                  "    pm.globals.set('refresh_token', authResult.RefreshToken);",
                  "    ",
                  "    console.log('Tokens stored in globals for API calls');",
                  "    ",
                  "    // Decode and verify ID token has custom claims",
                  "    try {",
                  "        const payload = authResult.IdToken.split('.')[1];",
                  "        const decoded = JSON.parse(atob(payload));",
                  "        console.log('JWT Claims:', JSON.stringify(decoded, null, 2));",
                  "        ",
                  "        pm.test('Token has custom claims', function () {",
                  "            pm.expect(decoded).to.have.property('user_id');",
                  "            pm.expect(decoded).to.have.property('org_id');",
                  "            pm.expect(decoded).to.have.property('isSuperAdmin');",
                  "        });",
                  "    } catch (e) {",
                  "        console.log('Failed to decode JWT token:', e);",
                  "    }",
                  "});",
                  "",
                  "console.log('SuperAdmin sign in successful with custom claims!');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-amz-json-1.1"
              },
              {
                "key": "X-Amz-Target",
                "value": "AWSCognitoIdentityProviderService.InitiateAuth"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"AuthFlow\": \"USER_PASSWORD_AUTH\",\n  \"ClientId\": \"3f0fb5mpivctnvj85tucusf88e\",\n  \"AuthParameters\": {\n    \"USERNAME\": \"buildboard007+test2@gmail.com\",\n    \"PASSWORD\": \"TempPass123!\"\n  }\n}"
            },
            "url": {
              "raw": "https://cognito-idp.us-east-2.amazonaws.com/",
              "protocol": "https",
              "host": [
                "cognito-idp",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Organization Management",
      "item": [
        {
          "name": "Get Organization Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has organization data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Organization Info:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/org",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "org"
              ]
            }
          }
        },
        {
          "name": "Update Organization Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Organization updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Updated Organization:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Acme Corporation\",\n    \"org_type\": \"general_contractor\",\n    \"license_number\": \"GC-12345\",\n    \"address\": \"123 Business Street, New York, NY 10001\",\n    \"phone\": \"+1-555-0123\",\n    \"email\": \"contact@acme.com\",\n    \"website\": \"https://acme.com\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/org",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "org"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Location Management",
      "item": [
        {
          "name": "Create Location",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Location created with required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('created_by');",
                  "    ",
                  "    // Store location_id for other requests",
                  "    pm.globals.set('location_id', responseJson.id);",
                  "    console.log('Created Location:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Headquarters\",\n    \"location_type\": \"office\",\n    \"address\": \"123 Main Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip_code\": \"10001\",\n    \"country\": \"USA\",\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations"
              ]
            }
          }
        },
        {
          "name": "Get All Locations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has locations array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('locations');",
                  "    pm.expect(responseJson).to.have.property('total');",
                  "    pm.expect(responseJson.locations).to.be.an('array');",
                  "    console.log('Locations:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations"
              ]
            }
          }
        },
        {
          "name": "Get Location by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has location data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Location Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations/{{location_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations",
                "{{location_id}}"
              ]
            }
          }
        },
        {
          "name": "Update Location",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Location updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Updated Location:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Corporate Headquarters\",\n    \"location_type\": \"office\",\n    \"address\": \"456 Business Avenue\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip_code\": \"10001\",\n    \"country\": \"USA\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations/{{location_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations",
                "{{location_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Location",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Location deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations/{{location_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations",
                "{{location_id}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "CORS Testing",
      "item": [
        {
          "name": "CORS Preflight - Organization",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('CORS headers present', function () {",
                  "    pm.expect(pm.response.headers.get('Access-Control-Allow-Origin')).to.not.be.null;",
                  "    pm.expect(pm.response.headers.get('Access-Control-Allow-Methods')).to.not.be.null;",
                  "    console.log('CORS Headers:', pm.response.headers);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "OPTIONS",
            "header": [
              {
                "key": "Access-Control-Request-Method",
                "value": "PUT"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "authorization,content-type"
              },
              {
                "key": "Origin",
                "value": "https://localhost:3000"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/org",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "org"
              ]
            }
          }
        },
        {
          "name": "CORS Preflight - Locations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('CORS headers present', function () {",
                  "    pm.expect(pm.response.headers.get('Access-Control-Allow-Origin')).to.not.be.null;",
                  "    pm.expect(pm.response.headers.get('Access-Control-Allow-Methods')).to.not.be.null;",
                  "    console.log('CORS Headers:', pm.response.headers);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "OPTIONS",
            "header": [
              {
                "key": "Access-Control-Request-Method",
                "value": "POST"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "authorization,content-type"
              },
              {
                "key": "Origin",
                "value": "https://localhost:3000"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Unauthorized Request (No Token)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "console.log('Expected 401 Unauthorized response:', pm.response.text());"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/org",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "org"
              ]
            }
          }
        },
        {
          "name": "Invalid Location Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "console.log('Expected validation error:', pm.response.text());"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"A\",\n    \"address\": \"123 Test Street\",\n    \"description\": \"Location name too short - should fail validation\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/locations",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "locations"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Roles Management",
      "item": [
        {
          "name": "Create Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Role created with required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('role_id');",
                  "    pm.expect(responseJson).to.have.property('role_name');",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    ",
                  "    // Store role_id for other requests",
                  "    pm.globals.set('role_id', responseJson.role_id);",
                  "    console.log('Created Role:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"role_name\": \"Manager\",\n    \"description\": \"Manages team and operations\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles"
              ]
            }
          }
        },
        {
          "name": "Get All Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has roles array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('roles');",
                  "    pm.expect(responseJson).to.have.property('total');",
                  "    pm.expect(responseJson.roles).to.be.an('array');",
                  "    console.log('Roles:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles"
              ]
            }
          }
        },
        {
          "name": "Get Role by ID with Permissions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has role data with permissions', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('role_id');",
                  "    pm.expect(responseJson).to.have.property('role_name');",
                  "    pm.expect(responseJson).to.have.property('permissions');",
                  "    pm.expect(responseJson.permissions).to.be.an('array');",
                  "    console.log('Role with Permissions:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles/{{role_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles",
                "{{role_id}}"
              ]
            }
          }
        },
        {
          "name": "Update Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Role updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('role_id');",
                  "    pm.expect(responseJson).to.have.property('role_name');",
                  "    console.log('Updated Role:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"role_name\": \"Senior Manager\",\n    \"description\": \"Senior level manager with extended responsibilities\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles/{{role_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles",
                "{{role_id}}"
              ]
            }
          }
        },
        {
          "name": "Assign Permission to Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Permission assigned successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    console.log('Assignment Response:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"permission_id\": {{permission_id}}\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles/{{role_id}}/permissions",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles",
                "{{role_id}}",
                "permissions"
              ]
            }
          }
        },
        {
          "name": "Unassign Permission from Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Permission unassigned successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    console.log('Unassignment Response:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"permission_id\": {{permission_id}}\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles/{{role_id}}/permissions",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles",
                "{{role_id}}",
                "permissions"
              ]
            }
          }
        },
        {
          "name": "Delete Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Role deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/roles/{{role_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "roles",
                "{{role_id}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Permissions Management",
      "item": [
        {
          "name": "Create Permission",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Permission created with required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('permission_id');",
                  "    pm.expect(responseJson).to.have.property('permission_name');",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    ",
                  "    // Store permission_id for other requests",
                  "    pm.globals.set('permission_id', responseJson.permission_id);",
                  "    console.log('Created Permission:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"permission_name\": \"READ_REPORTS\",\n    \"description\": \"Permission to read and view reports\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/permissions",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "permissions"
              ]
            }
          }
        },
        {
          "name": "Get All Permissions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has permissions array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('permissions');",
                  "    pm.expect(responseJson).to.have.property('total');",
                  "    pm.expect(responseJson.permissions).to.be.an('array');",
                  "    console.log('Permissions:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/permissions",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "permissions"
              ]
            }
          }
        },
        {
          "name": "Get Permission by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has permission data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('permission_id');",
                  "    pm.expect(responseJson).to.have.property('permission_name');",
                  "    console.log('Permission Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/permissions/{{permission_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "permissions",
                "{{permission_id}}"
              ]
            }
          }
        },
        {
          "name": "Update Permission",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Permission updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('permission_id');",
                  "    pm.expect(responseJson).to.have.property('permission_name');",
                  "    console.log('Updated Permission:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"permission_name\": \"READ_ALL_REPORTS\",\n    \"description\": \"Permission to read all reports including sensitive ones\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/permissions/{{permission_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "permissions",
                "{{permission_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Permission",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Permission deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/permissions/{{permission_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "permissions",
                "{{permission_id}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User (No Location Required)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('User created with required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user_id');",
                  "    pm.expect(responseJson.data).to.have.property('email');",
                  "    pm.expect(responseJson.data).to.have.property('cognito_id');",
                  "    pm.expect(responseJson).to.have.property('temporary_password');",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    pm.expect(responseJson.data).to.have.property('location_role_assignments');",
                  "    pm.expect(responseJson.data.location_role_assignments).to.be.an('array');",
                  "    ",
                  "    // Store user_id for other requests",
                  "    pm.globals.set('user_id', responseJson.data.user_id);",
                  "    console.log('Created User:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"phone\": \"+1234567890\",\n    \"mobile\": \"+1987654321\",\n    \"job_title\": \"Software Engineer\",\n    \"employee_id\": \"EMP001\",\n    \"avatar_url\": \"https://example.com/photos/john.jpg\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users"
              ]
            }
          }
        },
        {
          "name": "Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has users array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('users');",
                  "    pm.expect(responseJson.data).to.have.property('total');",
                  "    pm.expect(responseJson.data.users).to.be.an('array');",
                  "    console.log('Users:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users"
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user data with assignments', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user_id');",
                  "    pm.expect(responseJson.data).to.have.property('email');",
                  "    pm.expect(responseJson.data).to.have.property('location_role_assignments');",
                  "    pm.expect(responseJson.data.location_role_assignments).to.be.an('array');",
                  "    console.log('User Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users/{{user_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users",
                "{{user_id}}"
              ]
            }
          }
        },
        {
          "name": "Update User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user_id');",
                  "    pm.expect(responseJson.data).to.have.property('email');",
                  "    console.log('Updated User:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"updated.email@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"+1234567890\",\n    \"mobile\": \"+1987654321\",\n    \"job_title\": \"Senior Software Engineer\",\n    \"employee_id\": \"EMP001\",\n    \"avatar_url\": \"https://example.com/photos/john-updated.jpg\",\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users/{{user_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users",
                "{{user_id}}"
              ]
            }
          }
        },
        {
          "name": "Send Password Reset Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Password reset email sent', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('message');",
                  "    console.log('Password Reset Response:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users/{{user_id}}/reset-password",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users",
                "{{user_id}}",
                "reset-password"
              ]
            }
          }
        },
        {
          "name": "Delete User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User deleted successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('message');",
                  "    console.log('Delete Response:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/users/{{user_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "users",
                "{{user_id}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Project Management",
      "item": [
        {
          "name": "Create Project (Fixed - API Contract Compliant)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Project created with API contract response', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('success');",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    pm.expect(responseJson).to.have.property('data');",
                  "    pm.expect(responseJson.data).to.have.property('project_id');",
                  "    pm.expect(responseJson.data).to.have.property('project_number');",
                  "    ",
                  "    // Store project_id for other requests",
                  "    pm.globals.set('project_id', responseJson.data.project_id);",
                  "    console.log('Created Project:', JSON.stringify(responseJson, null, 2));",
                  "});",
                  "",
                  "pm.test('Common Issues Fixed', function () {",
                  "    // If you get 401: Ensure you completed SuperAdmin signup workflow",
                  "    // If you get date validation errors: Use future dates (2025+)",
                  "    // If you get constraint errors: Check enum values match schema",
                  "    console.log('✅ 401 Error Fixed: Token customizer adds user_id, org_id');",
                  "    console.log('✅ Date Error Fixed: Using future dates in timeline');",
                  "    console.log('✅ Constraint Error Fixed: project_phase = pre_construction');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"basic_info\": {\n        \"name\": \"Downtown Office Complex\",\n        \"description\": \"A modern office complex with sustainable design\",\n        \"address\": \"123 Business District, Downtown, NY 10001\"\n    },\n    \"project_details\": {\n        \"project_stage\": \"pre-construction\",\n        \"work_scope\": \"new\",\n        \"project_sector\": \"commercial\",\n        \"delivery_method\": \"design-build\",\n        \"square_footage\": 50000,\n        \"language\": \"en\",\n        \"status\": \"active\"\n    },\n    \"location\": {\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip_code\": \"10001\",\n        \"country\": \"USA\"\n    },\n    \"timeline\": {\n        \"start_date\": \"2025-09-15\",\n        \"substantial_completion_date\": \"2026-12-01\",\n        \"project_finish_date\": \"2027-01-15\"\n    },\n    \"financial\": {\n        \"budget\": 5000000.00\n    },\n    \"project_manager\": {\n        \"name\": \"Sarah Johnson\",\n        \"company\": \"BuildCorp LLC\",\n        \"role\": \"general-contractor\",\n        \"email\": \"sarah.johnson@buildcorp.com\",\n        \"office_contact\": \"+1-555-0123\",\n        \"mobile_contact\": \"+1-555-0124\"\n    }\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects"
              ]
            }
          }
        },
        {
          "name": "Get Projects (with optional location filter)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has projects array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('projects');",
                  "    pm.expect(responseJson.projects).to.be.an('array');",
                  "    console.log('Filtered Projects:', JSON.stringify(responseJson, null, 2));",
                  "});",
                  "",
                  "pm.test('Optional location filter applied if location_id provided', function () {",
                  "    const url = pm.request.url.toString();",
                  "    if (url.includes('location_id=')) {",
                  "        console.log('✅ Location filter applied: ' + url);",
                  "    } else {",
                  "        console.log('ℹ️ No location filter applied - showing all projects');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects?location_id={{location_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects"
              ],
              "query": [
                {
                  "key": "location_id",
                  "value": "{{location_id}}",
                  "description": "Optional: Filter projects by location ID"
                }
              ]
            },
            "description": "Retrieves projects with optional location filtering. Use the location_id query parameter to filter projects by a specific location. If no location_id is provided, all projects will be returned."
          }
        },
        {
          "name": "Get All Projects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has projects array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('projects');",
                  "    pm.expect(responseJson).to.have.property('total');",
                  "    pm.expect(responseJson.projects).to.be.an('array');",
                  "    console.log('Projects:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects"
              ]
            }
          }
        },
        {
          "name": "Get Project by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has project data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('project_number');",
                  "    console.log('Project Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}"
              ]
            }
          }
        },
        {
          "name": "Update Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Project updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Updated Project:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Downtown Office Complex - Updated\",\n    \"description\": \"Updated description for modern office complex\",\n    \"project_stage\": \"course-of-construction\",\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Project deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}"
              ]
            }
          }
        },
        {
          "name": "Create Project Manager",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Project manager created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    ",
                  "    // Store manager_id for other requests",
                  "    pm.globals.set('manager_id', responseJson.id);",
                  "    console.log('Created Project Manager:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Mike Johnson\",\n    \"company\": \"Construction Solutions Inc\",\n    \"role\": \"architect\",\n    \"email\": \"mike.johnson@constructionsolutions.com\",\n    \"office_contact\": \"+1-555-0200\",\n    \"mobile_contact\": \"+1-555-0201\",\n    \"is_primary\": true\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/managers",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "managers"
              ]
            }
          }
        },
        {
          "name": "Get Project Managers",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has managers array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "    console.log('Project Managers:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/managers",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "managers"
              ]
            }
          }
        },
        {
          "name": "Get Project Manager by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has manager data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('email');",
                  "    console.log('Manager Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/managers/{{manager_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "managers",
                "{{manager_id}}"
              ]
            }
          }
        },
        {
          "name": "Update Project Manager",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Manager updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    console.log('Updated Manager:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Mike Johnson Sr.\",\n    \"company\": \"Construction Solutions Inc\",\n    \"role\": \"program-manager\",\n    \"office_contact\": \"+1-555-0202\",\n    \"is_primary\": false\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/managers/{{manager_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "managers",
                "{{manager_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Project Manager",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Project manager deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/managers/{{manager_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "managers",
                "{{manager_id}}"
              ]
            }
          }
        },
        {
          "name": "Create Project Attachment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Attachment created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('file_name');",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    ",
                  "    // Store attachment_id for other requests",
                  "    pm.globals.set('attachment_id', responseJson.id);",
                  "    console.log('Created Attachment:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"file_name\": \"project_blueprint.pdf\",\n    \"file_path\": \"/attachments/projects/blueprint_v1.pdf\",\n    \"file_size\": 2048000,\n    \"file_type\": \"application/pdf\",\n    \"attachment_type\": \"project_photo\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/attachments",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "attachments"
              ]
            }
          }
        },
        {
          "name": "Get Project Attachments",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has attachments array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "    console.log('Project Attachments:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/attachments",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "attachments"
              ]
            }
          }
        },
        {
          "name": "Get Project Attachment by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has attachment data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('file_name');",
                  "    console.log('Attachment Details:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/attachments/{{attachment_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "attachments",
                "{{attachment_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Project Attachment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('Project attachment deleted successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/attachments/{{attachment_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "attachments",
                "{{attachment_id}}"
              ]
            }
          }
        },
        {
          "name": "Assign User to Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('User assigned to project successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    ",
                  "    // Store assignment_id for other requests",
                  "    pm.globals.set('assignment_id', responseJson.id);",
                  "    console.log('User Assignment:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": {{user_id}},\n    \"role_id\": {{role_id}},\n    \"trade_type\": \"electrical\",\n    \"is_primary\": true,\n    \"start_date\": \"2024-06-01\",\n    \"end_date\": \"2025-12-31\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/users",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "users"
              ]
            }
          }
        },
        {
          "name": "Get Project User Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user roles array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "    console.log('Project User Roles:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/users",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "users"
              ]
            }
          }
        },
        {
          "name": "Update Project User Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User role updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('project_id');",
                  "    console.log('Updated User Role:', JSON.stringify(responseJson, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"role_id\": {{role_id}},\n    \"trade_type\": \"plumbing\",\n    \"is_primary\": false,\n    \"end_date\": \"2026-01-31\"\n}"
            },
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/users/{{assignment_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "users",
                "{{assignment_id}}"
              ]
            }
          }
        },
        {
          "name": "Remove User from Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "console.log('User removed from project successfully.');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/users/{{assignment_id}}",
              "protocol": "https",
              "host": [
                "74zc1md7sc",
                "execute-api",
                "us-east-2",
                "amazonaws",
                "com"
              ],
              "path": [
                "main",
                "projects",
                "{{project_id}}",
                "users",
                "{{assignment_id}}"
              ]
            }
          }
        }
      ]
    }
  ]
}