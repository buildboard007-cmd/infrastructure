{
	"info": {
		"_postman_id": "assignment-management-api-collection-001",
		"name": "Assignment Management",
		"description": "Assignment management endpoints for user role assignments to projects, locations, and organizations.\n\nCORE ENDPOINTS:\n- POST /assignments - Create assignment\n- GET /assignments/{id} - Get single assignment\n- PUT /assignments/{id} - Update assignment\n- GET /contexts/{contextType}/{contextId}/assignments - Get project/location teams\n\nTESTING NOTES:\n- Use ID tokens (not access tokens) for API Gateway\n- Test with: buildboard007+555@gmail.com | Mayur@1234\n- All dates should use YYYY-MM-DD format",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{id_token}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "Create Assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Assignment created successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('user_id');",
							"    pm.expect(responseJson).to.have.property('role_id');",
							"    pm.expect(responseJson).to.have.property('context_type');",
							"    pm.expect(responseJson).to.have.property('context_id');",
							"    pm.expect(responseJson).to.have.property('user_name');",
							"    pm.expect(responseJson).to.have.property('user_email');",
							"    pm.expect(responseJson).to.have.property('role_name');",
							"    pm.expect(responseJson).to.have.property('context_name');",
							"    pm.expect(responseJson).to.have.property('org_id');",
							"    ",
							"    pm.globals.set('assignment_id', responseJson.id);",
							"    console.log('Created Assignment:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": {{user_id}},\n    \"role_id\": 8,\n    \"context_type\": \"project\",\n    \"context_id\": {{project_id}},\n    \"trade_type\": \"electrical\",\n    \"is_primary\": true,\n    \"start_date\": \"2025-09-20\",\n    \"end_date\": \"2025-12-31\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/assignments",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"assignments"
					]
				},
				"description": "Create a new assignment for a user to a project, location, or organization context."
			}
		},
		{
			"name": "Get Assignment by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Assignment details retrieved', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('user_id');",
							"    pm.expect(responseJson).to.have.property('role_id');",
							"    pm.expect(responseJson).to.have.property('context_type');",
							"    pm.expect(responseJson).to.have.property('context_id');",
							"    pm.expect(responseJson).to.have.property('user_name');",
							"    pm.expect(responseJson).to.have.property('user_email');",
							"    pm.expect(responseJson).to.have.property('role_name');",
							"    pm.expect(responseJson).to.have.property('context_name');",
							"    pm.expect(responseJson).to.have.property('org_id');",
							"    console.log('Assignment Details:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/assignments/{{assignment_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"assignments",
						"{{assignment_id}}"
					]
				},
				"description": "Get a specific assignment by ID with enriched data."
			}
		},
		{
			"name": "Update Assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Assignment updated successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('updated_at');",
							"    pm.expect(responseJson).to.have.property('user_name');",
							"    pm.expect(responseJson).to.have.property('user_email');",
							"    pm.expect(responseJson).to.have.property('role_name');",
							"    pm.expect(responseJson).to.have.property('context_name');",
							"    pm.expect(responseJson).to.have.property('org_id');",
							"    console.log('Updated Assignment:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"role_id\": 9,\n    \"trade_type\": \"plumbing\",\n    \"is_primary\": false,\n    \"end_date\": \"2025-06-30\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/assignments/{{assignment_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"assignments",
						"{{assignment_id}}"
					]
				},
				"description": "Update an existing assignment. Only include fields you want to change."
			}
		},
		{
			"name": "Get Context Assignments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Context assignments retrieved', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('context_type');",
							"    pm.expect(responseJson).to.have.property('context_id');",
							"    pm.expect(responseJson).to.have.property('context_name');",
							"    pm.expect(responseJson).to.have.property('org_id');",
							"    pm.expect(responseJson).to.have.property('assignments');",
							"    ",
							"    if (responseJson.assignments && responseJson.assignments.length > 0) {",
							"        const firstAssignment = responseJson.assignments[0];",
							"        pm.expect(firstAssignment).to.have.property('user_name');",
							"        pm.expect(firstAssignment).to.have.property('user_email');",
							"        pm.expect(firstAssignment).to.have.property('role_name');",
							"        pm.expect(firstAssignment).to.have.property('org_id');",
							"    }",
							"    console.log('Context Assignments:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/contexts/project/{{project_id}}/assignments",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"contexts",
						"project",
						"{{project_id}}",
						"assignments"
					]
				},
				"description": "Get all assignments for a specific context (project, location, or organization)."
			}
		}
	]
}