{
	"info": {
		"_postman_id": "rfi-management-api-collection-002",
		"name": "RFI Management",
		"description": "RFI Management API - Consistent with Issue Management pattern\n\n🎯 ENDPOINTS (5 total - matching Issue API structure):\n\nCore CRUD Operations:\n  - GET    /rfis/{rfiId}                    Get RFI with all data\n  - POST   /rfis                            Create RFI\n  - PUT    /rfis/{rfiId}                    Update RFI\n\nList Query:\n  - GET    /projects/{projectId}/rfis      Get RFIs for project (with filters)\n\nSub-resources:\n  - POST   /rfis/{rfiId}/comments          Add comment (with optional attachments)\n\n📋 RFI STRUCTURE:\n- Categories: DESIGN, SPECIFICATION, SCHEDULE, COORDINATION, GENERAL, SUBMITTAL, CHANGE_EVENT\n- Priorities: LOW, MEDIUM, HIGH, URGENT\n- Statuses: DRAFT, OPEN, CLOSE\n\n🎨 KEY FEATURES:\n- Simple, RESTful API design (consistent with Issue Management)\n- User fields return {id, name} objects\n- Comments support attachments via attachment_ids array\n- All dates use YYYY-MM-DD format\n- RFI numbers are auto-generated ONLY for OPEN status (DRAFT has null rfi_number)\n- When updating DRAFT → OPEN, rfi_number is automatically generated\n- RFI numbers are unique per project (format: RFI-YYYY-NNNN)\n- Organization ID extracted from JWT token\n\n📎 ATTACHMENTS:\n- RFI attachments are managed through the centralized Attachment Management API\n- Use POST /attachments/upload-url with entity_type=rfi or entity_type=rfi_comment\n- Link attachments to comments using attachment_ids array in comment creation\n- See the Attachment Management collection for full workflow\n\n🔧 TESTING NOTES:\n- Use ID tokens (not access tokens) for API Gateway\n- Test with: buildboard007+555@gmail.com | Mayur@1234\n\n⚠️ DEPRECATED:\n- /contexts/{contextType}/{contextId}/rfis (use /projects/{projectId}/rfis instead)\n- /rfis/{rfiId}/attachments (use centralized Attachment Management API)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create RFI (OPEN)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('RFI created successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('project_id');",
							"    pm.expect(responseJson).to.have.property('subject');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson).to.have.property('assigned_to');",
							"    pm.expect(responseJson).to.have.property('created_by');",
							"    ",
							"    // DRAFT status should have null rfi_number, OPEN should have rfi_number",
							"    if (responseJson.status === 'OPEN') {",
							"        pm.expect(responseJson).to.have.property('rfi_number');",
							"        pm.expect(responseJson.rfi_number).to.not.be.null;",
							"    }",
							"    ",
							"    // Verify assigned_to is array of objects with {id, name}",
							"    if (responseJson.assigned_to.length > 0) {",
							"        pm.expect(responseJson.assigned_to[0]).to.have.property('id');",
							"        pm.expect(responseJson.assigned_to[0]).to.have.property('name');",
							"    }",
							"    ",
							"    // Verify created_by is object with {id, name}",
							"    pm.expect(responseJson.created_by).to.have.property('id');",
							"    pm.expect(responseJson.created_by).to.have.property('name');",
							"    ",
							"    // Store rfi_id for other requests",
							"    pm.globals.set('rfi_id', responseJson.id);",
							"    console.log('Created RFI:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"location_id\": {{location_id}},\n    \"subject\": \"Clarification on HVAC unit placement in Building A\",\n    \"description\": \"The HVAC unit placement shown in drawing M-201 conflicts with the structural beam location shown in S-101. Need clarification on final placement to avoid conflicts with building structure. The current design shows the unit positioned directly below a primary structural beam which will interfere with installation.\",\n    \"category\": \"DESIGN\",\n    \"discipline\": \"Mechanical\",\n    \"project_phase\": \"Construction\",\n    \"priority\": \"HIGH\",\n    \"status\": \"OPEN\",\n    \"received_from\": {{user_id}},\n    \"assigned_to\": [{{user_id}}, 23],\n    \"ball_in_court\": {{user_id}},\n    \"distribution_list\": [\n        \"project.manager@company.com\",\n        \"mechanical.engineer@company.com\",\n        \"structural.engineer@company.com\"\n    ],\n    \"due_date\": \"2025-11-15\",\n    \"cost_impact\": true,\n    \"schedule_impact\": false,\n    \"cost_impact_amount\": 5000.00,\n    \"schedule_impact_days\": null,\n    \"location_description\": \"Building A, Floor 2, Grid Lines A-B/1-2\",\n    \"drawing_numbers\": [\"M-201\", \"S-101\", \"A-101\"],\n    \"specification_sections\": [\"23 00 00\", \"23 05 00\"],\n    \"related_rfis\": [\"RFI-2025-0015\"]\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis"
					]
				}
			}
		},
		{
			"name": "Create RFI (DRAFT)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('DRAFT RFI created successfully without rfi_number', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson.status).to.equal('DRAFT');",
							"    ",
							"    // DRAFT should not have rfi_number (null or omitted)",
							"    pm.expect(responseJson.rfi_number).to.satisfy(function(val) {",
							"        return val === null || val === undefined;",
							"    }, 'rfi_number should be null or undefined for DRAFT');",
							"    ",
							"    // Store draft_rfi_id for testing DRAFT->OPEN transition",
							"    pm.globals.set('draft_rfi_id', responseJson.id);",
							"    console.log('Created DRAFT RFI:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"location_id\": {{location_id}},\n    \"subject\": \"DRAFT: Preliminary question about electrical panel location\",\n    \"description\": \"Need to gather more information before submitting formal RFI. This is a draft to collect initial thoughts and references.\",\n    \"category\": \"DESIGN\",\n    \"priority\": \"MEDIUM\",\n    \"status\": \"DRAFT\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis"
					]
				}
			}
		},
		{
			"name": "Update DRAFT to OPEN (generates RFI number)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('RFI number generated when status changed to OPEN', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson.status).to.equal('OPEN');",
							"    pm.expect(responseJson).to.have.property('rfi_number');",
							"    pm.expect(responseJson.rfi_number).to.not.be.null;",
							"    pm.expect(responseJson.rfi_number).to.match(/^RFI-\\d{4}-\\d{4}$/);",
							"    console.log('Generated RFI Number:', responseJson.rfi_number);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"OPEN\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{draft_rfi_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis",
						"{{draft_rfi_id}}"
					]
				}
			}
		},
		{
			"name": "Get Project RFIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response is array of RFIs', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.an('array');",
							"    ",
							"    // Verify assigned_to structure in list",
							"    if (responseJson.length > 0 && responseJson[0].assigned_to.length > 0) {",
							"        pm.expect(responseJson[0]).to.have.property('id');",
							"        pm.expect(responseJson[0]).to.have.property('rfi_number');",
							"        pm.expect(responseJson[0].assigned_to[0]).to.have.property('id');",
							"        pm.expect(responseJson[0].assigned_to[0]).to.have.property('name');",
							"    }",
							"    ",
							"    console.log('Found', responseJson.length, 'RFIs for project');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/rfis?status=OPEN&priority=HIGH",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"projects",
						"{{project_id}}",
						"rfis"
					],
					"query": [
						{
							"key": "status",
							"value": "OPEN"
						},
						{
							"key": "priority",
							"value": "HIGH"
						}
					]
				}
			}
		},
		{
			"name": "Get RFI by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has RFI details with correct structure', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('rfi_number');",
							"    pm.expect(responseJson).to.have.property('subject');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    ",
							"    // Verify user object structures",
							"    pm.expect(responseJson.created_by).to.have.property('id');",
							"    pm.expect(responseJson.created_by).to.have.property('name');",
							"    pm.expect(responseJson.updated_by).to.have.property('id');",
							"    pm.expect(responseJson.updated_by).to.have.property('name');",
							"    ",
							"    // Verify assigned_to array structure",
							"    pm.expect(responseJson).to.have.property('assigned_to');",
							"    pm.expect(Array.isArray(responseJson.assigned_to)).to.be.true;",
							"    ",
							"    console.log('RFI Details:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis",
						"{{rfi_id}}"
					]
				}
			}
		},
		{
			"name": "Update RFI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('RFI updated successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('subject');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    ",
							"    // Verify updated_by has correct structure",
							"    pm.expect(responseJson.updated_by).to.have.property('id');",
							"    pm.expect(responseJson.updated_by).to.have.property('name');",
							"    ",
							"    console.log('Updated RFI:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"UPDATED: Clarification on HVAC unit placement in Building A\",\n    \"priority\": \"URGENT\",\n    \"status\": \"OPEN\",\n    \"assigned_to\": [{{user_id}}, 23, 45],\n    \"ball_in_court\": 23,\n    \"cost_impact_amount\": 6500.00,\n    \"schedule_impact\": true,\n    \"schedule_impact_days\": 2,\n    \"drawing_numbers\": [\"M-201\", \"S-101\", \"A-101\", \"M-205\"],\n    \"location_description\": \"Building A, Floor 2, Grid Lines A-B/1-2 - Updated with site conditions\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis",
						"{{rfi_id}}"
					]
				}
			}
		},
		{
			"name": "Update RFI Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('RFI status changed successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson.status).to.equal('CLOSE');",
							"    console.log('Status Change Response:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"CLOSE\"\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis",
						"{{rfi_id}}"
					]
				}
			}
		},
		{
			"name": "Create RFI Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Comment added successfully', function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('comment');",
							"    pm.expect(responseJson).to.have.property('attachments');",
							"    pm.expect(responseJson.attachments).to.be.an('array');",
							"    console.log('Added Comment:', JSON.stringify(responseJson, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"comment\": \"Site visit completed today. Confirmed that HVAC unit can be relocated 3 feet east to avoid structural beam conflict. Mechanical contractor agrees with proposed solution. No impact to ductwork routing.\",\n    \"attachment_ids\": []\n}"
				},
				"url": {
					"raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/comments",
					"protocol": "https",
					"host": [
						"74zc1md7sc",
						"execute-api",
						"us-east-2",
						"amazonaws",
						"com"
					],
					"path": [
						"main",
						"rfis",
						"{{rfi_id}}",
						"comments"
					]
				}
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main"
		},
		{
			"key": "project_id",
			"value": "47",
			"description": "Project ID for testing"
		},
		{
			"key": "location_id",
			"value": "22",
			"description": "Location ID for testing"
		},
		{
			"key": "user_id",
			"value": "19",
			"description": "User ID for testing"
		},
		{
			"key": "rfi_id",
			"value": "",
			"description": "RFI ID - populated automatically after creating an RFI"
		},
		{
			"key": "draft_rfi_id",
			"value": "",
			"description": "Draft RFI ID - populated automatically after creating a DRAFT RFI"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{id_token}}",
				"type": "string"
			}
		]
	}
}
