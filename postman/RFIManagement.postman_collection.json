{
  "info": {
    "_postman_id": "rfi-management-api-collection-001",
    "name": "RFI Management API",
    "description": "API collection for Request for Information (RFI) Management service including RFI lifecycle, comments, attachments, and workflow management.\n\nüéØ SERVICE SCOPE:\nThis collection contains endpoints that are actually implemented in the RFI management service:\n- RFI CRUD operations (create, read, update, delete)\n- Project-specific RFI listing\n- RFI workflow management (submit, respond, approve, reject)\n- Comments and attachments management\n- Status tracking and updates\n\n‚úÖ RFI WORKFLOW:\n1. Create RFI: POST /rfis (draft status)\n2. Submit for Review: POST /rfis/{rfiId}/submit (submitted status)\n3. Add Comments/Attachments: POST /rfis/{rfiId}/comments or /attachments\n4. Respond to RFI: POST /rfis/{rfiId}/respond (responded status)\n5. Approve/Reject: POST /rfis/{rfiId}/approve or /reject (approved/rejected status)\n6. Status Updates: PATCH /rfis/{rfiId}/status\n\nüìã RFI CATEGORIES & STATUSES:\n- Categories: architectural, structural, mechanical, electrical, plumbing, other\n- Priorities: critical, high, medium, low\n- Statuses: draft, submitted, under_review, responded, approved, rejected, closed\n- Disciplines: architecture, structural, mechanical, electrical, plumbing, civil\n\nüîê SECURITY IMPROVEMENTS:\n- Organization ID extracted from JWT token (not request body)\n- Project validation happens server-side\n- Enhanced data integrity constraints\n\nüîß TESTING NOTES:\n- Use ID tokens (not access tokens) for API Gateway\n- Test with: buildboard007+555@gmail.com | Mayur@1234\n- Ensure project_id exists before creating RFIs\n- All dates should use YYYY-MM-DD format\n- RFI numbers are auto-generated if not provided\n\nüèóÔ∏è CONSTRUCTION WORKFLOW:\n1. Field workers create RFIs during construction\n2. RFIs are submitted to architects/engineers for review\n3. Responses include clarifications, drawings, or change instructions\n4. Approval workflow for cost/schedule impacts\n5. RFIs are closed when information is provided and accepted\n\nüì± MOBILE-OPTIMIZED:\n- Designed for field workers using mobile devices\n- Photo attachments support for site conditions\n- Distribution lists for stakeholder communication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create RFI",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('RFI created successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('id');",
              "    pm.expect(responseJson).to.have.property('rfi_number');",
              "    pm.expect(responseJson).to.have.property('project_id');",
              "    pm.expect(responseJson).to.have.property('subject');",
              "    pm.expect(responseJson).to.have.property('status');",
              "    ",
              "    // Store rfi_id for other requests",
              "    pm.globals.set('rfi_id', responseJson.id);",
              "    console.log('Created RFI:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"project_id\": {{project_id}},\n    \"location_id\": {{location_id}},\n    \"subject\": \"Clarification on Foundation Detail at Grid Line A-5\",\n    \"question\": \"The foundation detail shown in drawing S-101 at grid line A-5 conflicts with the specifications in section 03300. The drawing shows a 24-inch square footing, but the specification calls for a 30-inch square footing. Which requirement takes precedence?\",\n    \"description\": \"Need immediate clarification as we are ready to pour concrete footings in this area. The conflict affects the reinforcement layout and concrete quantity.\",\n    \"category\": \"structural\",\n    \"discipline\": \"structural\",\n    \"trade_type\": \"concrete\",\n    \"project_phase\": \"construction\",\n    \"priority\": \"high\",\n    \"reviewer_email\": \"structural.engineer@company.com\",\n    \"cc_list\": [\n        \"project.manager@company.com\",\n        \"superintendent@company.com\"\n    ],\n    \"distribution_list\": [\n        \"project.manager@company.com\",\n        \"structural.engineer@company.com\",\n        \"quality.control@company.com\"\n    ],\n    \"due_date\": \"2025-10-15\",\n    \"cost_impact\": true,\n    \"schedule_impact\": true,\n    \"cost_impact_amount\": 2500.00,\n    \"schedule_impact_days\": 2,\n    \"cost_impact_details\": \"Additional concrete and rebar required if 30-inch footing is confirmed\",\n    \"schedule_impact_details\": \"2-day delay if we need to revise footing layout and re-order materials\",\n    \"location_description\": \"Building A, Foundation at Grid Line A-5\",\n    \"drawing_references\": \"S-101, S-102\",\n    \"specification_references\": \"Section 03300 - Cast-in-Place Concrete\",\n    \"urgency_justification\": \"Concrete pour scheduled for next week, need resolution before material ordering\",\n    \"business_justification\": \"Avoiding rework and schedule delays\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis"
          ]
        }
      }
    },
    {
      "name": "Get RFIs by Project",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has RFIs list', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('rfis');",
              "    pm.expect(responseJson).to.have.property('total');",
              "    console.log('Found', responseJson.total, 'RFIs');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/projects/{{project_id}}/rfis?status=submitted&priority=high",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "projects",
            "{{project_id}}",
            "rfis"
          ],
          "query": [
            {
              "key": "status",
              "value": "submitted"
            },
            {
              "key": "priority",
              "value": "high"
            }
          ]
        }
      }
    },
    {
      "name": "Get RFI by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has RFI details', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('id');",
              "    pm.expect(responseJson).to.have.property('rfi_number');",
              "    pm.expect(responseJson).to.have.property('subject');",
              "    pm.expect(responseJson).to.have.property('question');",
              "    pm.expect(responseJson).to.have.property('status');",
              "    console.log('RFI Details:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}"
          ]
        }
      }
    },
    {
      "name": "Update RFI (Full Update)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI updated successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('id');",
              "    pm.expect(responseJson).to.have.property('subject');",
              "    pm.expect(responseJson).to.have.property('status');",
              "    console.log('Updated RFI:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"subject\": \"UPDATED: Clarification on Foundation Detail at Grid Line A-5\",\n    \"question\": \"Updated question: The foundation detail shown in drawing S-101 at grid line A-5 conflicts with the specifications in section 03300. The drawing shows a 24-inch square footing, but the specification calls for a 30-inch square footing. Which requirement takes precedence? Please also confirm the reinforcement schedule.\",\n    \"description\": \"UPDATED: Need immediate clarification as we are ready to pour concrete footings in this area. The conflict affects the reinforcement layout and concrete quantity. Site conditions show good bearing capacity.\",\n    \"priority\": \"critical\",\n    \"cost_impact_amount\": 3500.00,\n    \"schedule_impact_days\": 3,\n    \"cost_impact_details\": \"Revised estimate: Additional concrete, rebar, and formwork required if 30-inch footing is confirmed\",\n    \"schedule_impact_details\": \"3-day delay if we need to revise footing layout, re-order materials, and adjust reinforcement schedule\",\n    \"drawing_references\": \"S-101, S-102, S-105\",\n    \"urgency_justification\": \"Updated: Concrete pour scheduled for Monday, need resolution by Friday for weekend material preparation\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}"
          ]
        }
      }
    },
    {
      "name": "Update RFI Status Only",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI status updated successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('updated successfully');",
              "    console.log('Status Update Response:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"status\": \"under_review\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/status",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "status"
          ]
        }
      }
    },
    {
      "name": "Submit RFI for Review",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI submitted successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('submitted');",
              "    console.log('Submit Response:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"submit_notes\": \"All required information and attachments have been provided. This RFI is ready for architectural review.\",\n    \"notify_reviewer\": true,\n    \"expected_response_date\": \"2025-10-10\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/submit",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "submit"
          ]
        }
      }
    },
    {
      "name": "Respond to RFI",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI response added successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('response');",
              "    console.log('Response Result:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"response\": \"After reviewing both the drawings and specifications, the specification takes precedence. Please use the 30-inch square footing as specified in section 03300. The drawing will be revised in the next update. Use the reinforcement schedule shown in drawing S-102 but adjust for the larger footing size.\",\n    \"response_status\": \"information_provided\",\n    \"response_date\": \"2025-09-25\",\n    \"technical_clarification\": \"The 30-inch footing provides better load distribution for the actual soil conditions. The 24-inch footing shown in the drawing was based on preliminary soil reports.\",\n    \"action_required\": \"Proceed with 30-inch footing construction as specified. Submit shop drawings for reinforcement layout confirmation.\",\n    \"cost_impact_approved\": true,\n    \"schedule_impact_approved\": true\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/respond",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "respond"
          ]
        }
      }
    },
    {
      "name": "Approve RFI",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI approved successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('approved');",
              "    console.log('Approval Response:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"approval_comments\": \"RFI response is comprehensive and addresses all concerns. The structural engineer's recommendation to use 30-inch footings is approved. Cost and schedule impacts are acceptable given the improved foundation performance.\",\n    \"approval_date\": \"2025-09-26\",\n    \"cost_approved\": true,\n    \"schedule_approved\": true,\n    \"conditions\": \"Proceed as recommended. Submit as-built drawings upon completion for record purposes.\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/approve",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "approve"
          ]
        }
      }
    },
    {
      "name": "Reject RFI",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI rejected successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('rejected');",
              "    console.log('Rejection Response:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"rejection_reason\": \"Insufficient information provided. Please include soil bearing capacity test results and provide clearer site photos showing the actual conditions at grid line A-5.\",\n    \"rejection_date\": \"2025-09-26\",\n    \"additional_info_required\": [\n        \"Soil bearing capacity test results\",\n        \"High-resolution site photos\",\n        \"Survey data for exact grid line location\",\n        \"Geotechnical engineer recommendations\"\n    ],\n    \"resubmission_deadline\": \"2025-10-02\",\n    \"reviewer_notes\": \"The current information is not sufficient to make an informed decision on the foundation size. Additional geotechnical data is critical for this determination.\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/reject",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "reject"
          ]
        }
      }
    },
    {
      "name": "Add RFI Comment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Comment added successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('id');",
              "    pm.expect(responseJson).to.have.property('comment');",
              "    console.log('Added Comment:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"comment\": \"Site visit completed today. Confirmed that the existing conditions match the drawing dimensions. However, the soil appears more compact than anticipated. Recommend geotechnical engineer visit before making final footing size determination.\",\n    \"comment_type\": \"field_observation\",\n    \"is_internal\": false,\n    \"notify_stakeholders\": true\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/comments",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "comments"
          ]
        }
      }
    },
    {
      "name": "Get RFI Comments",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Comments retrieved successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('comments');",
              "    console.log('RFI Comments:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/comments",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "comments"
          ]
        }
      }
    },
    {
      "name": "Add RFI Attachment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Attachment added successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('id');",
              "    pm.expect(responseJson).to.have.property('filename');",
              "    pm.expect(responseJson).to.have.property('s3_url');",
              "    console.log('Added Attachment:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"filename\": \"foundation_detail_photo.jpg\",\n    \"file_type\": \"image/jpeg\",\n    \"file_size\": 2450000,\n    \"description\": \"Current foundation connection detail showing conflict with specifications\",\n    \"attachment_type\": \"photo\",\n    \"s3_bucket\": \"project-attachments-bucket\",\n    \"s3_key\": \"rfis/2024/foundation_detail_photo.jpg\"\n}"
        },
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/attachments",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "attachments"
          ]
        }
      }
    },
    {
      "name": "Get RFI Attachments",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Attachments retrieved successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('attachments');",
              "    console.log('RFI Attachments:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}/attachments",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}",
            "attachments"
          ]
        }
      }
    },
    {
      "name": "Delete RFI",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('RFI deleted successfully', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('deleted');",
              "    console.log('Delete Response:', JSON.stringify(responseJson, null, 2));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main/rfis/{{rfi_id}}",
          "protocol": "https",
          "host": [
            "74zc1md7sc",
            "execute-api",
            "us-east-2",
            "amazonaws",
            "com"
          ],
          "path": [
            "main",
            "rfis",
            "{{rfi_id}}"
          ]
        }
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://74zc1md7sc.execute-api.us-east-2.amazonaws.com/main"
    },
    {
      "key": "project_id",
      "value": "47",
      "description": "Project ID for testing"
    },
    {
      "key": "location_id",
      "value": "22",
      "description": "Location ID for testing"
    },
    {
      "key": "rfi_id",
      "value": "",
      "description": "RFI ID - populated automatically after creating an RFI"
    },
    {
      "key": "access_token",
      "value": "",
      "description": "JWT ID token for authentication (use ID token, not access token)"
    }
  ]
}